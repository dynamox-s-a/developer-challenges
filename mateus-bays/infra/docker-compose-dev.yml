services:
  dynamox-db:
    image: postgres:latest
    container_name: dynamox-db
    environment:
      POSTGRES_USER: dynamox    
      POSTGRES_PASSWORD: dynamoxdb   
      POSTGRES_DB: dynamox_db         
    ports:
      - "${DB_SERVER_PORT}:5432"                      
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    networks:
      - dynamox-network         

  dynamox-auth:
    image: dynamox-auth
    build:
       context: .. 
       dockerfile: Dockerfile  
    container_name: dynamox-auth
    restart: unless-stopped
    command: npm run start:auth 
    env_file:
      - .env
    ports:
      - "${AUTH_SERVER_PORT}:9080"
    volumes:
      - ../dynamox-auth/:/app/dynamox-auth  
    networks:
      - dynamox-network   
    healthcheck:
      test: ["CMD", "curl", "-f", "http://dynamox-auth:9080/api"]
      interval: 30s
      timeout: 10s
      retries: 3   

  dynamox-be:
    image: dynamox-be
    build:
       context: ..
       dockerfile: Dockerfile    
    container_name: dynamox-be
    restart: unless-stopped
    command: npm run start:be 
    env_file:
      - .env  
    ports:
      - "${BE_SERVER_PORT}:9081"
    depends_on:
      - dynamox-auth
      - dynamox-db
    volumes:
      - ../dynamox-be/:/app/dynamox-be  
    networks:
      - dynamox-network 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://dynamox-be:9081/api"]
      interval: 30s
      timeout: 10s
      retries: 3                      

  dynamox-nginx:
    image: nginx:latest
    container_name: dynamox-nginx
    restart: unless-stopped
    build:
      context: ./nginx-config
    depends_on:
      dynamox-be:
        condition: service_healthy
      dynamox-auth:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - ./nginx-config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-config/cors.conf:/etc/nginx/conf.d/cors.conf:ro
      - ./nginx-config/proxy_params.conf:/etc/nginx/conf.d/proxy_params.conf:ro
    networks:
      - dynamox-network

volumes:
  postgres_data:

networks:
  dynamox-network:
    name: dynamox-network